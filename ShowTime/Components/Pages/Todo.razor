@page "/todo"  
@rendermode InteractiveServer  

<PageTitle>Todo</PageTitle>  

<h1>Enter the task you want to do:</h1>  
<input type="text" @bind="title" placeholder="Task title" />  
<button class="btn btn-primary" @onclick="() => AddTodo(title)">Add Todo</button>

<Div Style="padding-top : 10px;">
    <Progress Value="@UpdateProgress()" Animated Striped />
</Div>

<Table Striped>
    <TableHeader>  
        <TableRow>  
            <TableHeaderCell>#</TableHeaderCell>  
            <TableHeaderCell>Title</TableHeaderCell>  
            <TableHeaderCell>Status</TableHeaderCell>  
        </TableRow>  
    </TableHeader>  
    <TableBody>  
        @foreach (var todo in todos)  
        {  
            <TableRow>  
                <TableRowCell>@todos.IndexOf(todo)</TableRowCell>  
                <TableRowCell>@todo.Title</TableRowCell>  
                <TableRowCell>
                    <Button Color="Color.Danger" Clicked="() => ChangeStatus(todos.IndexOf(todo))">@(todo.IsCompleted ? "Completed" : "Pending") </Button>
                </TableRowCell>  
            </TableRow>  
        }  
    </TableBody>  
</Table>  

@code {
    private int progress { get; set; } = 0;
    private readonly List<TodoItem> todos = new List<TodoItem>();  
    private string title = string.Empty;  

    public void AddTodo(string item)  
    {  
        if (!string.IsNullOrWhiteSpace(item))  
        {  
            todos.Add(new TodoItem {Title = item, IsCompleted = false});  
        }  
    }  

    public void ChangeStatus(int id)  
    {  
        todos[id].IsCompleted = !todos[id].IsCompleted;  
    }  

    public int UpdateProgress()  
    {
        if (todos.Count == 0)
            return 0;
        return (int)Math.Round((double)todos.Count(item => item.IsCompleted) / todos.Count * 100);
    }

    public class TodoItem  
    {  
        public string Title { get; set; } = string.Empty;  
        public bool IsCompleted { get; set; }  
    }  
}
